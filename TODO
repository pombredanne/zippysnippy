Ideas for snippet manager in approximate order of utility/difficulty

- Look into ssdeep library for hash comparisons... probably faster than current
  approach
  - http://ssdeep.sourceforge.net/usage.html
  - http://pypi.python.org/pypi/ssdeep
- Not sure that just storing the number of repetitions is going to cut it. If
  you turn rep rate way up and then turn it down, the number will be huuuuge
  Or, maybe you just need to take date snipped into account. I think that's a
  much better solution.
- Randomization: Too often a chunk of related text comes up all at once.
  - Definitely randomize order when lots of snippets are available
  - Maybe even randomize days they become available too (otherwise you'll just
    see the same chunks in increasing waves of time)
- Add title field, fetch title from html page
- Unmark: don't mark current item as read
- Unicode data in input causes failure
- Flags
- Split
  - open the edit window, with a notice in comments (like git) to add some kind
    of separator where you want the split to happen.
- Write to disk more frequently
- QuickStart screen for first run without any data.
- Deduplication
  - maybe it can run in the background.
  - per-category, or maybe not.
  - low priority in any case.
  - show entries by liklihood of duplication. if user says "not duplicate",
    store that information somewhere. Or maybe algorithm will be good enough?
- Bulk source verify: recheck all sources, mark bad ones
  - maybe store date of last check
- Clipboard:
  - it's probably possible to get the source application for the selection in the
    X clipboard by going through the C api but its sortof a pain. take a look at
    the xclip source code for examples, if you care enough to
  - see also http://tronche.com/gui/x/icccm/
